// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"bytes"
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ResourceStructural Structural metadata for the resource.
// swagger:model resourceStructural
type ResourceStructural struct {

	// Filesets that contain the digital representations (Files) of the resource.
	Contains []string `json:"contains"`

	// Agreement that covers the deposit of the resource into TAQUITO.
	// Required: true
	HasAgreement *string `json:"hasAgreement"`

	// has member
	HasMember *ResourceStructuralHasMemberTuple0 `json:"hasMember,omitempty"`

	// has member orders
	HasMemberOrders ResourceStructuralHasMemberOrders `json:"hasMemberOrders,omitempty"`

	// An Annotation instance that applies to the resource.
	IsTargetOf string `json:"isTargetOf,omitempty"`
}

// Validate validates this resource structural
func (m *ResourceStructural) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateContains(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateHasAgreement(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateHasMember(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ResourceStructural) validateContains(formats strfmt.Registry) error {

	if swag.IsZero(m.Contains) { // not required
		return nil
	}

	return nil
}

func (m *ResourceStructural) validateHasAgreement(formats strfmt.Registry) error {

	if err := validate.Required("hasAgreement", "body", m.HasAgreement); err != nil {
		return err
	}

	return nil
}

func (m *ResourceStructural) validateHasMember(formats strfmt.Registry) error {

	if swag.IsZero(m.HasMember) { // not required
		return nil
	}

	if m.HasMember != nil {

		if err := m.HasMember.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("hasMember")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ResourceStructural) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ResourceStructural) UnmarshalBinary(b []byte) error {
	var res ResourceStructural
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// ResourceStructuralHasMemberTuple0 ResourceStructuralHasMemberTuple0 a representation of an anonymous Tuple type
// swagger:model ResourceStructuralHasMemberTuple0
type ResourceStructuralHasMemberTuple0 struct {

	// p0
	// Required: true
	P0 *string `json:"-"` // custom serializer

}

// UnmarshalJSON unmarshals this tuple type from a JSON array
func (m *ResourceStructuralHasMemberTuple0) UnmarshalJSON(raw []byte) error {
	// stage 1, get the array but just the array
	var stage1 []json.RawMessage
	buf := bytes.NewBuffer(raw)
	dec := json.NewDecoder(buf)
	dec.UseNumber()

	if err := dec.Decode(&stage1); err != nil {
		return err
	}

	// stage 2
	if len(stage1) > 0 {
		buf = bytes.NewBuffer(stage1[0])
		dec := json.NewDecoder(buf)
		dec.UseNumber()
		if err := dec.Decode(m.P0); err != nil {
			return err
		}
	}

	return nil
}

// MarshalJSON marshals this tuple type into a JSON array
func (m ResourceStructuralHasMemberTuple0) MarshalJSON() ([]byte, error) {
	data := []interface{}{
		m.P0,
	}

	return json.Marshal(data)
}

// Validate validates this resource structural has member tuple0
func (m *ResourceStructuralHasMemberTuple0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateP0(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ResourceStructuralHasMemberTuple0) validateP0(formats strfmt.Registry) error {

	if err := validate.Required("P0", "body", m.P0); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ResourceStructuralHasMemberTuple0) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ResourceStructuralHasMemberTuple0) UnmarshalBinary(b []byte) error {
	var res ResourceStructuralHasMemberTuple0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
